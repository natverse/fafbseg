# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          # - {os: ubuntu-20.04, r: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHUNKEDGRAPH_SECRET: ${{ secrets.CHUNKEDGRAPH_SECRET }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      FLYTABLE_TOKEN: ${{ secrets.FLYTABLE_TOKEN }}
      # RETICULATE_MINICONDA_PYTHON_VERSION: "3.10.14"
      RGL_USE_NULL: TRUE
      _R_CHECK_DONTTEST_EXAMPLES_: FALSE
      _R_CHECK_TESTS_NLINES_: 0
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
      FLYWIRE_PRINCIPLES: IAGREETOTHEFLYWIREPRINCIPLES

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::pkgdown, catmaid=natverse/rcatmaid, any::hdf5r, any::arrow
          needs: check

      - name: Fix Conda permissions on macOS
        if: runner.os == 'macOS-setaside'
        run: sudo chown -R $UID $CONDA

      - name: Install fafbseg + python
        run: |
          pak::local_install()
          library(fafbseg)
          # simple_python()
          # arrow::install_pyarrow()
          # just install miniconda to start with
          fafbseg:::simple_python_base("basic", miniconda=TRUE)
          # now install defined package versions
          reticulate::py_install('botocore==1.35.17', pip = T, pip_options='--upgrade --prefer-binary')
          reticulate::py_install('boto3==1.35.17', pip = T, pip_options='--upgrade --prefer-binary')
          reticulate::py_install('google_auth==2.34.0', pip = T, pip_options='--upgrade --prefer-binary')
          reticulate::py_install('cloud-volume==10.4.0', pip = T, pip_options='--upgrade --prefer-binary')
          reticulate::py_install('caveclient==5.29.1', pip = T, pip_options='--upgrade --prefer-binary')
          # now install the rest
          simple_python(pkgs = 'fafbseg')
          dr_fafbseg()
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Upload check log results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.tag }}-results
          path: ${{ github.event.repository.name }}.Rcheck/00check.log

      # - name: Test coverage
      #   # if: runner.os == 'macOS'
      #   if: ${{ runner.os == 'Linux' && matrix.config.r == 'release'}}
      #   run: covr::codecov(errorsAreFatal=FALSE)
      #   shell: Rscript {0}
