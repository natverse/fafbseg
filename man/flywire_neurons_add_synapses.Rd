% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autosyn.R
\name{flywire_neurons_add_synapses}
\alias{flywire_neurons_add_synapses}
\alias{flywire_neurons_add_synapses.neuron}
\alias{flywire_neurons_add_synapses.neuronlist}
\alias{flywire_synapse_annotations}
\title{Attach synapses to flywire neuron skeletons}
\usage{
flywire_neurons_add_synapses(
  x,
  connectors = NULL,
  cloudvolume.url = NULL,
  method = c("auto", "spine", "sqlite"),
  remove_autapses = TRUE,
  cleft.threshold = 0,
  Verbose = TRUE,
  transmitters = FALSE,
  local = NULL,
  ...
)

\method{flywire_neurons_add_synapses}{neuron}(
  x,
  connectors = NULL,
  cloudvolume.url = NULL,
  method = c("auto", "spine", "sqlite"),
  remove_autapses = TRUE,
  cleft.threshold = 0,
  Verbose = TRUE,
  transmitters = FALSE,
  local = NULL,
  ...
)

\method{flywire_neurons_add_synapses}{neuronlist}(
  x,
  connectors = NULL,
  cloudvolume.url = NULL,
  method = c("auto", "spine", "sqlite"),
  remove_autapses = TRUE,
  cleft.threshold = 0,
  Verbose = TRUE,
  transmitters = FALSE,
  local = NULL,
  ...
)

flywire_synapse_annotations(
  x,
  file = NULL,
  scale = 1/c(4, 4, 40),
  sample = NULL,
  best = TRUE,
  cleft.threshold = 30,
  remove_autapses = TRUE,
  local = NULL,
  cloudvolume.url = NULL
)
}
\arguments{
\item{x}{a \code{nat::neuronlist} for flywire neurons in the FlyWire or
FAFB14 brainspace. These skeletons can be created using
\code{\link{skeletor}}, or retrieved using
\code{hemibrainr::flywire_neurons}. When using
\code{flywire_synapse_annotations}
this can be a \code{data.frame} of synapses, e.g. from
\code{flywire_ntpred}
that need to be formatted as FlyWire annotations.}

\item{connectors}{a \code{data.frame} of FAFB synapses, with XYZ coordinates,
to attach to \code{x}. If \code{NULL} (default) synapses are fetched, as in
\code{\link{flywire_partners}}.}

\item{cloudvolume.url}{The segmentation source URL for cloudvolume. Normally
you can ignore this and rely on the default segmentation chosen by
\code{\link{choose_segmentation}}}

\item{method}{Whether to use a local SQLite database or remote spine service
for synapse data. The default \code{auto} uses a local database when
available (45GB but faster).}

\item{remove_autapses}{whether to remove autapses (defaults to \code{TRUE}).}

\item{cleft.threshold}{select only synaptic connections exceeding this
confidence threshold (default of 0 uses all synapses; values in the range
30-100 seem to make sense).}

\item{Verbose}{Whether to print status messages}

\item{transmitters}{if \code{TRUE} also attempt to retrieve neurotransmitter
predictions from Eckstein and Bates et al. 2024, for the flywire neuron in question.}

\item{local}{path to SQLite synapse data. Evaluated by
\code{fafbseg:::local_or_google}. Work in progress. Default is to download
this data and place it in \code{~/projects/JanFunke}.}

\item{...}{methods sent to \code{nat::nlapply}.}

\item{file}{when using \code{flywire_synapse_annotations}, the file path to
which to output a \code{.csv}. If \code{NULL}, a \code{data.frame} formatted
like a annotations CSV for FlyWire, is returned.}

\item{scale}{a scale factor applied to the XYZ coordinates for synapses.
Default moves them
from nanometre FlyWire space to raw voxel FlyWire space, which is most
appropriate
for FlyWire annotations.}

\item{sample}{if an integer, this is the number of synapses that are sampled
from \code{x}.}

\item{best}{logical. If \code{TRUE} and sample is an integer, then the
synapses with the highest cleft scores are chosen, \code{1:sample}.}
}
\value{
A \code{nat::neuronlist} object, where each neuron in the neuronlist
  has a \code{data.frame} of synapses at neuron$connectors.
}
\description{
Attach the appropriate input and output synapses to each flywire
  neuron skeleton in a neuronlist.
}
\examples{
\donttest{
\dontrun{
choose_segmentation("flywire")
nx=xform_brain(elmr::dense_core_neurons, ref="FlyWire", sample="FAFB14")
xyz = xyzmatrix(nx)
ids = unique(flywire_xyz2id(xyz[sample(nrow(xyz),100),]))
neurons = skeletor(ids, brain = elmr::FAFB14.surf)
neurons.syns = flywire_neurons_add_synapses(neurons, transmitters = TRUE)
neurons.syns[,]

# Plot in 3D
library(catmaid)
nopen3d()
plot3d(neurons.syns, WithConnectors = TRUE)

# Axon-dendrite split
library(hemibrainr)
neurons.flow = flow_centrality(neurons.syns,
  polypre = TRUE,
  mode = "centrifugal")
clear3d()
plot3d_split(neurons.flow, WithConnectors = TRUE,
transmitter = TRUE,
radius = 1000, soma = 4000)

# Save .csv of synapses as FlyWire annotations
flywire_synapse_annotations(ids[1], file="annotations1.csv",
cleft.threshold=30)

# And similar, from a neuronlist
syns = hemibrainr::hemibrain_extract_synapses(neurons.flow,
.parallel = TRUE, OmitFailures = TRUE)
flywire_synapse_annotations(syns, file="annotations2.csv",
cleft.threshold=30)

}
}
}
\seealso{
Other automatic-synapses: 
\code{\link{flywire_adjacency_matrix}()},
\code{\link{flywire_ntplot}()},
\code{\link{flywire_ntpred}()},
\code{\link{flywire_partners}()}
}
\concept{automatic-synapses}
