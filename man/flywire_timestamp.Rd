% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cave.R
\name{flywire_timestamp}
\alias{flywire_timestamp}
\title{Find standard UTC timestamp for flywire materialisation version or timestamp}
\usage{
flywire_timestamp(
  version = NULL,
  timestamp = NULL,
  convert = TRUE,
  datastack_name = getOption("fafbseg.cave.datastack_name", "flywire_fafb_production")
)
}
\arguments{
\item{version}{Integer materialisation version. The special value of
\code{'latest'} means the most recent materialisation according to CAVE.}

\item{timestamp}{A timestamp to normalise into an R or Python timestamp in
UTC. The special value of \code{'now'} means the current time in UTC.}

\item{convert}{Whether to convert from Python to R timestamp (default:
\code{TRUE})}

\item{datastack_name}{defaults to the value selected by
\code{\link{choose_segmentation}} and to "flywire_fafb_production" when
that is missing. See \url{https://global.daf-apis.com/info/} for other
options.}
}
\value{
A POSIXct object or Python datetime object in the UTC timezone.
}
\description{
Find standard UTC timestamp for flywire materialisation version or timestamp
}
\details{
Note that all CAVE timestamps are in UTC. When the \code{timestamp}
  argument is a character vector \bold{it is assumed to be in UTC regardless
  of any timezone specification}. Unless the input character vector contains
  the string "UTC" then a warning will be issued.
}
\examples{
\donttest{
ts=flywire_timestamp(349)
ts
# As a unix timestamp (number of seconds since 00:00 on 1970-01-01)
as.numeric(ts)
tsp=flywire_timestamp(349, convert=FALSE)
# should be same as the numeric timestamp above
tsp$timestamp()

flywire_timestamp(timestamp="2022-08-28 17:04:49 UTC")

# nb this will return the current time *in UTC* regardless of your timezone
flywire_timestamp(timestamp="now")
}
\dontrun{
# same but gives a warning
flywire_timestamp(timestamp="2022-08-28 17:04:49")
}
}
\seealso{
Other cave-queries: 
\code{\link{flywire_cave_query}()}
}
\concept{cave-queries}
