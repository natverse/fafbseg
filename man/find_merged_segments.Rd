% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge-groups.R
\name{find_merged_segments}
\alias{find_merged_segments}
\title{Find all merged segment ids for a given starting google segment id}
\usage{
find_merged_segments(
  x,
  return.groups = FALSE,
  return.segmentids.for.groups = TRUE
)
}
\arguments{
\item{x}{a segment id or any other input that can be interpreted by
\code{\link{ngl_segments}}}

\item{return.groups}{Whether to return the merge groups as well as the
segment ids}

\item{return.segmentids.for.groups}{Whether to return the canonical segment
id for each group rather than the 1-index of the merge group (see details).}
}
\value{
vector of segment ids (in ascending order) or when
  \code{return.groups=TRUE} a \code{data.frame} with columns \itemize{

  \item \code{segment} the integer segment id, as a numeric (double) column

  \item \code{group} an arbitrary group id starting from 1 OR the canonical
  segment id (see details), an integer or numeric (double), respectively

  }
}
\description{
Find all merged segment ids for a given starting google segment id
}
\details{
segment ids in \code{ffn16reseg-ms1000_md0.02_c0.6_iou0.7} always
  match one raw segment id in \code{fafb_v14_16nm_v00c_split3xfill2} but may
  map to a large agglomerated merge group.

  We provide two ways to define an identifier for each of these merge groups.
  One uses a canonical segment id: this is the first (i.e. lowest) segment id
  in the merge group and appears to be how the brainmaps API identifies the
  merge group. This will be the case even when there are no known merges for
  a given segment. In R this field will be a numeric (double) column since R
  does not have native support for 64 bit integers.

  The second approach to group identifiers uses an integer from 1 to the
  number of known merge groups. When there are no known merges for a segment,
  an \code{NA} value will be returned.

  Note that this function depends on the
  \code{\link[fafbsegdata]{segment_merge_groups.dt}} object from the
  \code{\link[fafbsegdata]{fafbsegdata}} package.
}
\examples{
\donttest{
if(requireNamespace('fafbsegdata', quietly = TRUE)) {
find_merged_segments(7186840767)
# these all belong to one merge group by definition
find_merged_segments(7186840767, return.groups=TRUE)
}
}
}
