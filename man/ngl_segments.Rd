% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ids.R
\name{ngl_segments}
\alias{ngl_segments}
\alias{ngl_segments<-}
\title{Helper function to turn diverse inputs into neuroglancer segment ids}
\usage{
ngl_segments(
  x,
  as_character = TRUE,
  include_hidden = FALSE,
  must_work = TRUE,
  unique = FALSE,
  ...
)

ngl_segments(x) <- value
}
\arguments{
\item{x}{Neuroglancer ids either as a vector of ids (character vector or
\code{integer64} recommended) OR a scene specification as raw JSON. format
(character vector), the path to a file on disk, a neuroglancer scene URL
(which embeds a JSON scene specification in a single URL), or an R list
generated by parsing one of the above.}

\item{as_character}{Whether to return segments as character rather than
numeric vector (the default is character for safety).}

\item{include_hidden}{Whether to include \code{hiddenSegments} (typically for
flywire scenes).}

\item{must_work}{if \code{TRUE}, the default, then an error will be generated
if the scene has no segments or if invalid ids are present. Explicit NAs
will trigger this error when \code{must_work=T}, but will be returned as id
0 without error when \code{must_work=F}.}

\item{unique}{When \code{TRUE} drops any duplicated ids with a warning}

\item{...}{Additional arguments passed to \code{\link{ngl_decode_scene}}}

\item{value}{Segment ids in any form understandable by \code{ngl_segments}.
This can include character/numeric/int64 ids, a URL, parsed neuroglancer
scene etc.}
}
\value{
Numeric (or character) vector of segment ids, taken from the first
  segmentation layer (with a warning) if the scene contains more than one.
}
\description{
\code{ngl_segments<-} replaces neuroglancer segments in a
  neuroglancer scene parsed by \code{\link{ngl_decode_scene}}.
}
\details{
For simple vector inputs, \code{ngl_segments} will treat the values
  \code{"NA", "NAN", "NULL"} (all case insensitive) and \code{""} as NA.

\code{ngl_segments<-} chooses the FlyWire style
  \code{segmentation_with_graph} layer if it exists otherwise the first
  visible segmentation layer. Note that \code{hiddenSegment will be removed
  in this process}.
}
\examples{
# -> character
ngl_segments(c(10950626347, 10952282491, 13307888342))
# turns these into numeric
ngl_segments(c("10950626347", "10952282491", "13307888342"), as_character=FALSE)

\donttest{
u="https://ngl.flywire.ai/?json_url=https://globalv1.flywire-daf.com/nglstate/5409525645443072"
ngl_segments(u, as_character = TRUE)
sc=ngl_decode_scene(u)
# set segments
ngl_segments(sc) <- c("720575940621039145")
# or a shortcut to add ids
sc=sc+c("720575940621039145", "720575940626877799")
sc
\dontrun{
# paste resultant URL to clipboard to use in neuroglancer
clipr::write_clip(as.character(sc))
}

# you can also modify the URL directly
ngl_segments(u)=c("720575940621039145", "720575940626877799")
}

\dontrun{
browseURL(u)

## Summary of different classes of input
# from clipboard
ngl_segments(clipr::read_clip())
# URL
ngl_segments("<ngl-scene-url>")
# path to file on disk
ngl_segments("/path/to/scene.json")
# R list
ngl_segments(scenelist)
}
}
\seealso{
Other neuroglancer-urls: 
\code{\link{flywire_ids}()},
\code{\link{flywire_scene}()},
\code{\link{ngl_blank_scene}()},
\code{\link{ngl_decode_scene}()},
\code{\link{ngl_encode_url}()},
\code{\link{open_fafb_ngl}()}
}
\concept{neuroglancer-urls}
