% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flytable.R
\name{flytable_update_rows}
\alias{flytable_update_rows}
\alias{flytable_append_rows}
\alias{flytable_nrow}
\title{Update or append rows in a flytable database}
\usage{
flytable_update_rows(
  df,
  table,
  base = NULL,
  append_allowed = TRUE,
  chunksize = 1000L,
  ...
)

flytable_append_rows(df, table, base = NULL, chunksize = 1000L, ...)

flytable_nrow(table, base = NULL)
}
\arguments{
\item{df}{A data.frame containing the data to upload including an \code{_id}
column that can identify each row in the remote table.}

\item{table}{Character vector naming a table}

\item{base}{Character vector naming a seatable base (recommended) or a
\code{Base} object returned by \code{flytable_base} (expert use).}

\item{append_allowed}{Whether rows without row identifiers can be appended.}

\item{chunksize}{To split large requests into smaller ones with max this many
rows.}

\item{...}{Additional arguments passed to \code{\link[pbapply]{pbsapply}}
which might include \code{cl=2} to specify a number of parallel jobs to
run.}
}
\value{
Logical indicating success, invisibly (failures will normally cause
  premature termination with errors written to the console).
}
\description{
\code{flytable_update_rows} updates existing rows in a table,
  returning \code{TRUE} on success.

\code{flytable_append_rows} appends data to an existing table, returning \code{TRUE} on success.

\code{flytable_nrow} returns the number or rows in one or more
  flytable tables using a SQL \code{COUNT} query.
}
\details{
seatable automatically maintains a unique id for each row in a
  \code{_id} column. This is returned by flytable_query and friends. If you
  modify data and then want to update again, you need to keep the column
  containing this row \code{_id}.

  You do not need to provide this \code{_id} column when appending new rows.
  Indeed you will get a warning when doing so.

  The \code{chunksize} argument is required because it seems that there is a
  maximum of 1000 rows per update action.
}
\examples{
\dontrun{
fruit=flytable_list_rows('testfruit')
flytable_update_rows(table='testfruit', fruit[1:2, c(1,4:6)])
}
\dontrun{
flytable_append_rows(table="testfruit",
  data.frame(fruitname='lemon', person='David', nid=4))
}
}
\seealso{
Other flytable: 
\code{\link{flytable-queries}},
\code{\link{flytable_list_selected}()},
\code{\link{flytable_login}()}
}
\concept{flytable}
