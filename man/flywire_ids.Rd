% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire-urls.R
\name{flywire_ids}
\alias{flywire_ids}
\title{Flexible specification of flywire ids (including from flytable types)}
\usage{
flywire_ids(
  x,
  integer64 = FALSE,
  check_latest = FALSE,
  must_work = FALSE,
  na_ok = FALSE,
  unique = FALSE,
  version = NULL,
  ...
)
}
\arguments{
\item{x}{A character or bit64::integer64 vector or a dataframe specifying ids
directly \emph{or} a string specifying a query (see examples) or a URL.}

\item{integer64}{Whether to return ids as 64 bit integers - more compact than
character vector, but can be more fragile (default \code{FALSE}).}

\item{check_latest}{Whether to check if ids are up to date.}

\item{must_work}{Whether ids must be valid}

\item{na_ok}{whether NA ids are acceptable when \code{must_work=TRUE}}

\item{unique}{Whether to return only unique ids}

\item{version}{Integer materialisation version}

\item{...}{Additional arguments passed to \code{\link{flytable_cell_types}}
or \code{\link{ngl_segments}}.}
}
\value{
character (or \code{integer64})) vector of segment ids
}
\description{
allows more flexible specification of flywire root ids compared
  with \code{\link{ngl_segments}} including by queries against cell types
  recorded in flytable.
}
\examples{
flywire_ids(data.frame(root_id=1))
flywire_ids(data.frame(root_id=1), integer64=TRUE)
# BA
flywire_ids(data.frame(root_id=-1))
\dontrun{
# will error
flywire_ids(data.frame(root_id=-1), must_work = TRUE)
}
# DL1 olfactory PNs
flywire_ids("DL1_adPN")
# DL1 olfactory PNs but only on the RHS
flywire_ids("DL1_adPN_R")
# specifying materialisation version
flywire_ids("DL1_adPN_R", version=400)
# using SQL wild cards
flywire_ids("DA[12]_\%PN_L")

# note that side is defined by soma position (not arbour side)
flywire_ids("class:MBON_R", integer64=TRUE)
}
\seealso{
\code{\link{flytable_cell_types}}.

Other neuroglancer-urls: 
\code{\link{flywire_scene}()},
\code{\link{ngl_blank_scene}()},
\code{\link{ngl_decode_scene}()},
\code{\link{ngl_encode_url}()},
\code{\link{ngl_segments}()},
\code{\link{open_fafb_ngl}()}
}
\concept{neuroglancer-urls}
