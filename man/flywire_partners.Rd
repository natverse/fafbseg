% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autosyn.R
\name{flywire_partners}
\alias{flywire_partners}
\alias{flywire_partner_summary}
\title{Find the input/output partners for a flywire neuron}
\usage{
flywire_partners(
  rootids,
  partners = c("outputs", "inputs", "both"),
  details = FALSE,
  roots = TRUE,
  reference = c("either", "FAFB14", "FlyWire"),
  cloudvolume.url = NULL,
  method = c("auto", "spine", "sqlite"),
  Verbose = TRUE,
  local = NULL,
  ...
)

flywire_partner_summary(
  rootids,
  partners = c("outputs", "inputs"),
  threshold = 0,
  remove_autapses = TRUE,
  cleft.threshold = 0,
  summarise = FALSE,
  surf = NULL,
  version = NULL,
  timestamp = NULL,
  method = c("auto", "spine", "sqlite", "cave"),
  Verbose = NA,
  local = NULL,
  ...
)
}
\arguments{
\item{rootids}{Character vector specifying one or more flywire rootids. As a
convenience for \code{flywire_partner_summary} this argument is passed to
\code{\link{flywire_ids}} allowing you to pass in data.frames, flywire URLs
or cell type queries.}

\item{partners}{Whether to fetch input or output synapses or both.}

\item{details}{Whether to include additional details such as X Y Z location
(default \code{FALSE})}

\item{roots}{Whether to fetch the flywire rootids of the partner neurons
(default \code{TRUE})}

\item{reference}{A character vector or a \code{\link{templatebrain}} object
specifying the reference template brain for any 3D coordinate information.
The default value of \code{"either"} will use the natural reference space
of the data source (FAFB14 for SQLite tables, FlyWire for the spine
service).}

\item{cloudvolume.url}{The segmentation source URL for cloudvolume. Normally
you can ignore this and rely on the default segmentation chosen by
\code{\link{choose_segmentation}}}

\item{method}{Whether to use a local SQLite database or remote spine service
for synapse data. The default \code{auto} uses a local database when
available (45GB but faster).}

\item{Verbose}{Whether to print status messages}

\item{local}{path to SQLite synapse data. Evaluated by
\code{fafbseg:::local_or_google}. Work in progress. Default is to download
this data and place it in \code{~/projects/JanFunke}.}

\item{...}{Additional arguments passed to \code{\link{pbsapply}}}

\item{threshold}{For \code{flywire_partner_summary} only return partners with
greater than this number of connections to the query neuron(s) (default of
0 returns all connections)}

\item{remove_autapses}{For \code{flywire_partner_summary} whether to remove
autapses (defaults to TRUE)}

\item{cleft.threshold}{A threshold for the cleft score calculated by Buhmann
et al 2019 (default 0, we have used 30-100 to increase specificity)}

\item{summarise}{(This was never implemented.) Whether to
collapse down the results for multiple query neurons into a single entry
for each partner neuron.}

\item{surf}{An object defining a 3D ROI inside which the presynaptic position
must be located. Can be a \code{\link{mesh3d}} object, or any object which
\code{\link{as.mesh3d}} can handle including \code{\link{hxsurf}} and
\code{\link{boundingbox}} objects. See \code{\link{pointsinside}} for
details.}

\item{version}{Integer materialisation version}

\item{timestamp}{A timestamp to normalise into an R or Python timestamp in
UTC. The special value of \code{'now'} means the current time in UTC.}
}
\value{
A \code{data.frame} with a \code{regtemplate} attribute specifying
  the reference brain space for any xyz points. Columns vary slightly
  depending on whether data is fetched from spine/ITANNA or a local sqlite
  database. The more obscure ones include:

  \itemize{

  \item \code{prepost} When \code{partners = "both"} then this column will be
  present. For any given row (synapse), \code{prepost=1} when the initial
  query neuron is downstream (postsynaptic) and the partner is upstream.

  \item \code{score} came straight from Buhmann et al and is supposed to
  indicate some confidence score for the predicted synapse.

  \item \code{cleft_score} is the more useful one and was a later addition by
  Stephan Gerhard that asks whether the pre and post synapses are positioned
  at sensible distances on each side of a cleft defined by a separate neural
  network from Larissa Heinrich in Stephan Saalfeldâ€™s group.

  }
}
\description{
\code{flywire_partners} is a low level function returning one
  row for every synapse.

\code{flywire_partner_summary} summarises the connectivity of
  one or more flywire neurons.
}
\details{
FIXME behaviour when there are no partners is not well-defined.

  Note that there are many duplicated connections in this raw output, false
  autapses (i.e. the same neuron connected to itself) and other false
  positives. See Buhmann et al for details and ideas about cleaning up the
  results.

  Also note that the ids returned are of the class \code{integer64} for
  \code{flywire_partners} where there is one row for each
  synapses/connection; but for \code{flywire_partner_summary} where rows
  report the number of connections between pairs of neurons, they are of type
  \code{character}. This is because the \code{integer64} type is more compact
  but less robust because it is not a base R type but instead provided by the
  \code{bit64} package. Some R functions such as \code{sapply} strip the
  class from \code{integer64} vectors, treating them as doubles of a
  completely different value.

\code{flywire_partners} and \code{flywire_partner_summary} by
  default report on the active connectivity state of neurons. At present only
  \code{flywire_partner_summary} allows time travel to historic
  materialisations using the \code{version} or \code{timestamp} arguments
  (see \code{\link{flywire_timestamp}} for details). This support actually
  depends on the cave backend (which will automatically be selected when
  \code{method='auto'}).
}
\examples{
\donttest{
pp=flywire_partners("720575940621039145")
head(pp)
class(pp$post_id)
}
\donttest{
# Note that post_id is of type character
flywire_partner_summary("720575940621039145", partners='out')
flywire_partner_summary("720575940621039145", partners='in')
flywire_partner_summary("720575940621039145")

# summary for neuron at a XYZ location (in this case in raw coordinates)
flywire_partner_summary(flywire_xyz2id(cbind(155682, 58180, 3215),
  rawcoords = TRUE))

\dontrun{
# Use Ctrl+Shift+J to share a flywire scene and then do this to get partner
# summary for that URL
flywire_partner_summary(clipr::read_clip())

cct=flywire_cave_query('cambridge_celltypes', live = T)
dl1.lh=flywire_partner_summary(cct$pt_root_id[grep("DL1", cct$cell_type)],
  surf=subset(elmr::FAFB14NP.surf, "LH_R"))
  # use a rectangular bounding box around LH instead
dl1.lhbb=flywire_partner_summary(cct$pt_root_id[grep("DL1", cct$cell_type)],
  surf=boundingbox(subset(elmr::FAFB14NP.surf, "LH_R")))
}
}
}
\seealso{
Other automatic-synapses: 
\code{\link{flywire_adjacency_matrix}()},
\code{\link{flywire_neurons_add_synapses}()},
\code{\link{flywire_ntplot}()},
\code{\link{flywire_ntpred}()}

Other automatic-synapses: 
\code{\link{flywire_adjacency_matrix}()},
\code{\link{flywire_neurons_add_synapses}()},
\code{\link{flywire_ntplot}()},
\code{\link{flywire_ntpred}()}
}
\concept{automatic-synapses}
